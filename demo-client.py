import socket
from cryptography.fernet import Fernet

# ------------------------------------------------------------------------- #
# Method to create a message and ensure that an empty message isn't sent
# ------------------------------------------------------------------------- #
def message():
    while True:
            msg = input("-> ")
            if msg != "":
                return msg
            else:
                continue
# -------------------------------------------------------------------------- #
# Method to encrypt the message using a Fernet Object with the encryption    
# key recieved                                      
# -------------------------------------------------------------------------- #

def encryptMsg(message,fernetObj):
    return fernetObj.encrypt(message.encode())

# -------------------------------------------------------------------------- #
# Method to decrypt the message using a Fernet Object with the encryption    
# key recieved                                      
# -------------------------------------------------------------------------- #

def decryptMsg(message,fernetObj):
    return fernetObj.decrypt(message)

# --------------------------------------------------------------------------- #
# Main event loop to allow the client to communicate with the server
# --------------------------------------------------------------------------- #
def communication_loop(msg,FernObj,client_socket):
     while msg.lower().strip() != 'exit':
            client_socket.send(encryptMsg(msg,FernObj))
            data = decryptMsg(client_socket.recv(1024),FernObj).decode()
            print("Server's Message: {}".format(data))
            msg = input ("-> ")
            if msg == 'exit':
                client_socket.send(encryptMsg("disconnecting",FernObj))

# ---------------------------------------------------------------------------- #
# Function to instantiate the socket and begin communicating with the server
# with an encryption key generated by Fernet
# ---------------------------------------------------------------------------- #
def client():
    host = socket.gethostname()
    port = 3645
    with socket.socket(socket.AF_INET,socket.SOCK_STREAM) as client_socket:
        client_socket.connect((host,port))
        # Send public key
        key = Fernet.generate_key()
        client_socket.send(key)
            
        FernObj = Fernet(key)
        msg = message()
        if msg == 'exit':
            client_socket.send(encryptMsg("disconnecting",FernObj))
        else:
            communication_loop(msg,FernObj,client_socket)



if __name__ == "__main__":
    client()




